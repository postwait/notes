%h2 I don't keep my code clean, I just turn the lights off!
%i Scott Dillman
%p Hey you. Go read Clean Code by Uncle Bob. It is a good book!
%p You should care about keeping your code clean! It is important for your code to be readable, especially to other developers.
%b We spend 10x times READING others code, as opposed to writing code.
%p Messy code, a.k.a. code that is hard to understand and is poorly tested, slows us down. When you have to deal with that type of code you are much more likely to make mistakes. Ramp up time is longer when code is messy. All these factors make it hard for developers to add new business features.
%p Why isn't your code clean? - "Good enough," deadlines, "I didn't write it!," "I'll clean it up later..." There are a LOT of excuses we, as developers, make for writing messy code.
%p "Management won't let us do it" is NOT an excuse. If your manager is telling you how to do your work, maybe they should be doing the work.
%b Leave the campground cleaner than you found it.
%p Coding standards matter! Make sure that your team establishes a standard.
%p There are a lot of great refactoring tools in your IDE (IDEA and ReSharper are especially good), take some time to learn them.
%p Duplication is the enemy (in production code, not tests).
%p Delete your commented out code. Delete your unused code (you can find unused code with static code analysis).
%b Don't abbr. your code
%p Naming matters, make names that make sense, are descriptive and understandable.
%p Include "good" comments. JavaDocs are good comments. Bad comments are comments in the code. Comments inside methods tend to be a code spell to extract a method.
%p Keep your classes small. Keep your functions small. Keep your features small. Keep your X small is generally a good rule.