%h2 Emerging Programming Languages: A Tour of the Horizon
%i Alex Payne
%p Emerging Languages Camp is an event to learn about new programming languages for non-academics. They will be with Strange Loop this year.
%p By the time you have heard of a programming language, it has probably been around for a while.
%p Any time a new programming language emerges, the Internet bashes them. (Good greif)
%p But that isn't right. We evolve. Computing evolves. Programming languages evolve. Don;t be afraid of learning something new.
%b You should use different languages for different jobs!
%b What if you just wanted to be a better Java?
%ul
  %li
    %p
      %b Kotlin
      by JetBrains: It is like a Java++ (or Scala--)
    %p It is like a better Java, or like Scala with a lot of the complicated stuff removed.
  %li
    %p
      %b Gosu:
      "A Pragmatic Language for the JVM"
    %p It looks a little bit like Java marries Ruby with a dsash of Scala.
  %li
    %p
      %b Ceylon
      by RedHat: It is an updated Java
    %p It looks a lot like Java, with a bit more syntaxtic sugar.
    %p They have intercepters, which is a nice add on to Java.
%b How about a better JavaScript?
%p JavaScript is a thorny language. LEt's make is better.
%ul
  %li
    %p
      %b StratifiedJS:
      JavaScript + Structured Concurrency
  %li
    %p
      %b CoffeeScript:
      Just the good parts of JavaScript
    %p This has taken off like a rocket. It looks a LOT like Ruby.
    %p Whitespace sensitive, and OO instead of Prototypical inheritance.
  %li
    %p
      %b Objective-J:
      The Objective-C for JavaScript
    %p Looks exactly like Obj-C
  %li
    %p
      %b ClojureScript:
      You write Clojure (a LISP), and JavaScript is spit out on the other side.
    %p The cool thing about this is that when writing ClojureScript, the Clojure team discovered how to translate to many other languages.
  %li
    %p
      %b Dart:
      Google's JavaScript Replacement
    %p The cool thing about this is there is optional typing in JavaScript.
  %li
    %p
      %b Roy:
      A very functional take on JavaScript
    %p You get a lot of what you want from Haskell or ML in JavaScript. VERY COOL!
%b So, what about Web Development? The FULL STACK! (HTML/CSS/JS/DB/Caching/etc.
%ul
  %li
    %p
      %b Opa:
      "A unified platform for web apps"
    %p This is a source-to-source compiler to OCaml.
    %p The idea is one language for all your web page.
  %li
    %p
      %b UR/WEB:
      "A DSL for Web Applications"
    %p This is like a Haskell for writing web apps end-to-end.
%b OK, low level time. Systems Programming!
%ul
  %li
    %p
      %b Go:
      Revenge of the 1970s!
    %p This is the Plan 9 crew from Bell Labs.
    %p Think of C with Garbage Collection. It is compiled and concurrent.
    %p These are guys that care about languages.
  %li
    %p
      %b Rust:
      "Safe, Concurrent, Practical"
    %p This is Mozilla's offering for a better C++.
    %p It is compiled, OOP, and functional (like Scala).
  %li
    %p
      %b OOC:
      C + Objects + More
    %p It compiles to C99, and gives you metaclasses.
    %p It is like a really clean type of C. Nice stuff!
%b How about dynamic programming!
%ul
  %li
    %p
      %b Fancy:
      A Dynamic Language on Rubinius VM
    %p This is a little bit like Ruby/Pythn AND it has actors baked in!
  %li
    %p
      %b Slate:
      A modern Smalltalk
    %p It is samlltalk with streams, prototypes, and macros.
  %li
    %p
      %b Elixir:
      "Modern programming for the Erlang VM"
    %p It looks like a Ruby-syntax for Erlangg. Making the Erlang VM a LOT more approachable.
%b Techinical Computing time!
%ul
  %li
    %p
      %b Frank:
      "Make physical calculations simple"
    %p It is embeddable, and a way to take the REAL WORLD and model it in code very clearly.
    %p Go read the Frank documentation, it is v. funny!
    %p Object oriented, and robust. You should check it out.
  %li
    %p
      %b Julia:
      "High-level, high-performance technical computing"
    %p This is like R, but better. A readable, dynamic language for numerical computing.
    %p It is parallel and compiled, much faster!
    %p You can have a dynamic language AND high performance. Very cool and faster than R.
  %li
    %p
      %b Faust:
      A Language for DSP and Synthesis
    %p This is a language for manipulating audio.
    %p You can build guitar petals and the like really fast.
%b Querying Data
%ul
  %li
    %p
      %b Bandicoot:
      A Language for Set Algebra
    %p A nice syntax for making crazy SQL calls in a persistance data model world.
  %li
    %p
      %b Quirrel:
      A Language for analytics
    %p Declarative and composable. This is a nice example of a simple programming language for data crunchers.
%b Languages to make you think
%ul
  %li
    %p
      %b Wheeler:
      "Different"
    %p a language with no variables, no objects, and no functions.
    %p It builds transitions to create graphs. that is wild stuff.
  %li
    %p
      %b Kodu:
      Programming for Kids, On Xbox
    %p Really easy to learn, and fun graphical interface. Check it out if you have a kid.
%p Wow. That was a LOT of languages. Really cool stuff.
%p There are lots of different jobs out there, and lots of languages to fit with them.
%p One reason for all these different languages is that there are a lot of different platforms:
%ul
  %li LLVM
  %li Erlang VM
  %li Rubinius VM
  %li JavaScript (V8, SpiderMonkey, Rhino, etc.)
  %li Xbox
  %li etc...
%p It is SO worth having fun with languages. They can expand your mind and make you a better engineer.
%p That is what you do:
%ol
  %li Explore.
  %li Experiment.
  %li Commit.
  %li GOTO 1.
%p Check out "Lambda the Ultimate." It is the place on the Net where PL nerds live.
%p It is really easy to run into a problem, throw up your hands, and go back to the last generation of programming languages. Don't do that.
%p We are NOT specialists in ONE PROGRAMMING LANGUAGE. Get over that.
%p Thank you Alex for the great talk!
