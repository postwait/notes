// Would you give it away (again)?
%h3 #phillyete Keynote 2 Notes
%i Stormy Peters, @storming
%p http://techcasts.charoitsolutions.com - podcasts and screncasts from ETE and more. Check it out.
%p What incentives people to work on open source software?
%p When you do something for internal purposes, and then you start getting an external purpose (i.e. getting paid), then you will eventually stop wanting to do it.
%p Pay is not the best motivator. The best motivators come from inside.
%p A lot of people work on open source software because they believe it needs to be done. When they are paid to do something, the internal motivation will be taken away.
%p On top of that, once you introduce an external motivation, then remove it, that internal motivation might never come back.
%p Of many of the open source software projects out there on average 40% of the contributors are paid.
%p How do companies change projects?
%ul
  %li
    What motivates developers to work on open source?
    %ul
      %li The top motivations are INTERNAL.
      %li We like to solve interesting problems.
      %li We work to learn something new.
      %li We like to be creative!
      %li We want to scratch an itch. We need something.
      %li We want to develop new skills.
      %li We want to feel clever. We LOVE to show off how clever we are. :)
      %li We want the fame. We like to be recognized by our peers, the people we respect.
      %li We like to do the right thing. It feels good to do good. Technology should be open so we can build a better world. About 1/3 of devs think software should be open.
  %li
    How are companies paying devs to do open source?
    %ul
      %li The payments have to be normal, not extraordinary.
      %li If you pay for a feature to be made, it is better than paying for improving performance.
      %li Employment: If the company employs the dev, instead of being a contractor, that is a good thing.
      %li In Kind Contributions: e.g. I will give you a cool machine IF you write software that works on that cool machine. (Works in about 10% of the time.)
      %li Bounties: I will pay you to complete this feature. (Actually this doesn't work so well, but there are still companies trying it out.) If you do this you NEED project management.
      %li Grants: You can get grants to work on open source yourself. (AWESOME!)
  %li
    Are there real world examples?
    %ul
      %li Have projects failed? Easel (Gnome project) hired people to work on open source, but failed. Easel hired people that were not passionate about open source, they were just software engineers.
      %li If you pay some people, but not others, that matters! If you pay some people overtime and other not, you will seriously demovative your devs.
      %li Where do people go? If you start getting paid for working on an open source project that you worked on, then you stop getting paid, it is an open source project killer. It demotivates the people that first worked on that project.
      %li A counter-example is the falling out between the OpenOffice and LibreOffice people.
  %li
    Will people still stay motivated after they stop getting paid?
    %ul
      %li Left brain jobs are really valued.
      %li People that create open source software don't just write code.
      %li When you work on open source, you are doing full stack. Not just coding. It is a left brain/right brain job.
      %li That is why working on open source is AWESOME!
      %li Then a open source person goes off to a company. And companies work differently.
      %li In the company your work is dictated to you. You are no longer in control of the full stack.
      %li And that SUCKS!
      %li It is a conflict between creating it the company's way versus creating it my way.
      %li That is frustrating!
  %li
    What to consider when dealing with open source software devs?
    %ul
      %li Be aware of why people are working on a piece of software. People get into open source for all different reasons. They might not be your reason.
      %li Contribute back to the open source community. Sponsor a hackfest, run a contest for open source software. Don't just TAKE. Pay it forward, or you will foster the hate. Don't do it company guy!
      %li Be open! Share your plans for what you want to do with the software. Be transparent. It matters. Tell your open source project how you use the software.
%p So companies and open source software CAN work together, but we have to be aware of the issues, and the companies have to be open with each other.
%p Thank you to Stormy for the great talk!
