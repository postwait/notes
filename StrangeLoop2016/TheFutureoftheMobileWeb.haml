%h2 The Future of the Mobile Web (#strangeloop notes)
%i Paul Kinlan
%p The computer systems we use have become more and more user friendly over the generations.
%p The WWW was a huge leap forward to this. It was far less capable than desktops at the time, but it was SO much more user friendly!
%p Then AJAX came along and you could write desktop-like power in the WWW.
%p At every step in the story of computing, friction was removed, distribution has become easier. That is very powerful.
%p We are moving forward with things in a radical speed, and that all started on June 29, 2007 with the introduction of the iPhone. It changed everything.
%p The difficulty of distribution has shrunk dramatically since the mobile revolution.
%p Every step you force a person to go through to get an app, you lose 20% of those customers. We need to make it even simpler!
%p What happens when native apps can solve the installation problem? Where does the web go then?
%p But when will the web get to the best of native. We are quickly converging.
%b Engagement is the killer feature.
%p What is the state of the WW right now? 40% of users abandon a website if it takes more than 3 seconds to load.
%p There are about 20% of households that are mobile-only. (My wife only has a smartphone and never uses a desktop).
%p China is the leader of mobile connections to the WWW. India is quickly matching the US for mobile online people.
%p The device constraints of most people in the world stop them using native apps. That is the value-add for WWW-first experiences for marginalized people.
%p Performance is everything to get to ALL the customers. You are missing out on a lot of the world right now with native apps.
%p The WWW is a meta-platform. But way, there are more platforms on top of the web, like FB, WeChat, Line, Kakao. Can we have a meta-platform that fits on top of all of those?
%p All these meta-platforms on top of the web want to tie you into their platforms.
%p We want to build FAST experiences on the web. We shouldn't have to worry about the technology, we should be worrying about performance instead.
%p Each "app" (Facebook, Line, Kakao, WeChat) wants to be the next platform. Where you go INSTEAD OF the web all together.
%p So where does th mobile web go? They want to match native features, focus on performance and most importantly, increase engagement!
%p The web is lumpy right now. You have to think a LOT about different browsers. It is HARD to develop for the mobile web right now. Native is way easier to code for. How do we make web SUPER EASY. The browser developers need to work together with the W3C to make this happen.
%p In the mobile web, you now can get access to almost everything on your phone, so you can make very powerful native-like apps on your phone on a mobile web browser. Wau!
%b OMG, we can do so much with just the web. Stop writing native apps, folks! Let's make web apps and get access to the rest of the world!!!
%p This is pretty amazing. I had no idea how powerful the mobile web had become. More development shops need to know about this.
%p WebUSB let's you share through USB form the web, Native Sharing is a new thing that allows you to share web app info with native apps.
%p The moral of the story is that the mobile web is catching up to native, but it isn't standardized yet.
%p RAIL: Respond, Animation, Idle, Load. This is a person-centric way of thinking about performance. (NOTE: I think there is a talk topic on this in and of itself. Talk idea?)
%p Progressive rendering is a great way of getting the RAIL performance up and faster.
%p OK, we have all the APIs, but as businesses we have to use those APIs to increase engagement with people.
%p Progressive Web Apps allow you to create native-feeling apps, even offline access.
%p The W3C API that controls this all is the Service Worker. Service Workers can work in the background to install software into your web cache all behind the scenes. Amazing.
%p The Service Worker sits in-between the person and the browser. It puts you in direct control of the offline support.
%p There is a concept of an App Shell that allows you to separate the content from your framework.
%p Service Workers are to Progressive Web Apps as XMLHTTPRequest is to AJAX.
%p In the future we want to move to the headless web, where you do not "opebn" a browser, the entire device IS the browser.
%p The future of the web is the future of the mobile web. They converge quickly.
%p Thank you, Paul, for a great talk!