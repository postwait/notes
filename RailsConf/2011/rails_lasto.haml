/ Craft, Engineering, and the Essence of Programming
%h3 #railsconf 2011 Notes
%i Glenn Vanderburg (LivingSocial)
%p The software crisis: in the 1960s things were crazy, so they tried to make it better. That was waterfall (FAIL!)
%p In the 1990s, Agile came along and things got a little better.
%p Programming is not engineering OR architecting. We are different.
%p Maybe we misunderstand WHAT engineering is.
%p The product of engineering is supposed to be safe and reliable. When people outside of engineering, they think of civil engineering.
%p But engineering is not ALWAYS save, and almost never predicable.
%p Engineering fields:
%ul
  %li Civil/Structural
  %li Aerospace
  %li Mechanical
  %li Chemical
  %li Industrial: Design and optimize processes (assembly lines and factory machinery)
  %li Electrical
%p As you work down the scale, they tend to prototype more. They tend to be more TEST-DRIVEN.
%p Sometimes engineering is workshop type of stuff. Just trying to get things working better.
%p Every technical problem has alternative solutions.
%p "What Engineers Know and How They Know It." and "Engineerings and the Mind's Eye" are good books. Read them.
%p We cannot specify a design enough to hand it to programmers without problems. When you think of software engineers you have:
%ol
  %li Programmers make
  %li Programs that are
  %li Compiled with compilers to
  %li An Executable program
%p The proper way to do software engineering is to spend time on the program, not the compiler.
%p Ruby is just compiled math!
%p What is expensive in traditional engineering is the cheapest part for us. (The compiler)
%p Are we software engineers or software craftsmen?
%h3 Craftsmanship
%p What is the difference between a craftsman, artisan, and an engineer?
%ul
  %li Artisans thinks and produce what is in their heads
  %li Engineers produce documents to help themselves think and to covey their designs to builders.
%p The desires of programming languages allow an isomorphism between what is written in code and what is built by the computer.
%p Software engineering is the most abstract of the engineering disciplines, and our documents are the most concrete.
%p Software models: Because our artifacts are abstract, our model is "concrete."
%p Modelling, to us, feel like it is working with the real time constructs.
%b We are designers AND builders.
%p We are also writers. Our code must BE the solution and describe the solution.
%p What we focus on MATTERS, and what we don't focus on is neglected.
%p Programs must be written for people to read, and only incidentally for machines to execute.
%p But no one pays us to code that is fun to read, they pay us for code that works.
%p We have to have our code explain to human beings about what we want computer to do.
%p Internal vs. external effects.
%ul
  %li Abstract vs. concrete
  %li Hidden vs. public and visible
  %li Potential effects vs. immediate effects
%p The Internal effects ARE important as well as the external effects.
%p We have the luxury of being BOTH craftsmen and engineers.
%p Thank you to Glenn for the great talk!

/ Optimizing for developer happiness
%h3 #railsconf 2011 Notes
%i Chad Dickerson (Etsy)
%p They deploy code to production about 25 times a day. There are over 400k sellers out there and growing!
%p How do they do it? It is all about culture. They optimize for developer happiness.
%p "Ruby is designed to make developers happy."
%p You need to make it easy to ship software. That makes you happy, as an engineer.
%p The way they do things at Etsy shouldn't work, but it does. They TRUST the people on the team.
%p They have a one button deploy at Etsy. You can deploy code on your first day! (that is SO cool)
%p It is important set up a way to deploy often.
%p Code is craft. And craftsmen sign their work. It is important to give your developers a voice.
%p You have to love your engineers to have engineers that love you.
%p The goal: Don't run your company in any way that will make your situation show up on Dilbert.
%b We are all part of humanity in the crusade of a pursuit of happiness.
%p There are a lot of places where software is viewed as factory work. We are NOT factory workers. We should not be treated as such.
%p ProTip: Developers, do NOT eat at your desk. Go and eat with your coworkers and talk with each other. That creates happiness.
%p Peter Drucker, the father of business management. Check out "Concept of the Corporation" for a good read.
%p Not having the satisfaction of finishing something is painful. We need to have that sense of completion to feel good.
%p Workers need to SEE what they are building.
%p Allowing employees a sense of completion and allowing them to see the finished product gives people a sense of worth.
%p Getting instant feedback from the community is also extremely rewarding.
%p At Etsy, from working on code in trunk to being in production takes 21 minutes.
%p A company is a community.
%p "The death and life of great American cities" - Jane Jacobs (good book to read!)
%p We use tools to build happy engineering environments at Etsy.
%p Devs and ops need to cooperate. Your team is a community. We need to help them FINISH things. It is important to give them a voice.
%p Many companies have pretended order, not real order. That pretend order kills motivation.
%p Build an environment where you can optimize the happiness of people.
%p Thank you to Chad for the GREAT talk!
