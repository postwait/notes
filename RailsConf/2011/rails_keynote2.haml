/ Keynote 2
%h3 #railsconf 2011 Notes
%i Eric Ries
%p Eric works at a place called Lean Startups. He writes http://StartupLessonsLearned.com/
%p There is a LOT of failure when you do a start up.
%p Lean.st is a website to test how to people buy books.
%p Entrepreneurs are everywhere. The thing is that entrepreneurship is HARD.
%p Most of the work of startups are BORING. Boring but important.
%p The 95% of entrepreneurship is the boring day to day.
%p Everyone thinks they know they know what an entrepreneur is, but do they?
%b A startup is and experiment!
%p We can build anything we can imagine, so everything we depend on is based on our collective imagination.
%p Entrepreneurs build companies, and most o them fail. Why?
%p I blame Fredrick Winslow Taylor. He invented management.
%p We are living in a craft production of entrepreneurship.
%p The Pivot: change directions but stay grounded in what we've learned.
%p We have to learn when to quit, and shift. We have to learn how to pivot.
%p If we can reduce the time between pivots, we can increase the time to success.
%p Validated learning. Waterfall allows you achieve failure really well.
%p Waterfall cannot work for fast changing start ups.
%p In Agile (XP) you can move much faster and change (pivot) much more quickly.
%p Why do we care about bugs that no one will ever use.
%p It HURTS when your software is thrown away. It is painful, but you should NOT fight it. That is what pivoting is about.
%p Even with failure, you can learn about your customers.
%p But why does it take so long to realize your software sucks? It shouldn't, and it doesn't if you prototype. That is what validated learning is all about.
%p A software company is nothing more than a catalyst that turns ideas into code.
%p Web have to:
%ul
  %li Build
  %li Measure
  %li Learn
%p Having a successful startup is all about having a flexible enough platform to be able to LEARN from your customers. You need to be able to test and turn around quickly.
%p It is all about being able to react FAST. That is the advantage of Rails. And that is why Rails is so popular with startups.
%p People will give you contradictory feedback today. But what matters is will your idea be valuable down the road.
%p When you use a quick feedback loop, you can test and measure success.
%p We have to build products with an immune system to make sure your products are safer to deploy more often.
%p Innovation accounting: We need to use learning milestones. What are we trying to learn? We all have a business plan with assertions.
%b We cannot hide assumptions in your business plan.
%p You have to find the truth about your product. Do NOT pull the wool over your eyes.
%p Most of the new features you put into your application makes it WORSE!
%p We have to be able to learn when to pivot and when to persevere.
%p If your plan is to ship it and see what happens, you will see what happens.
%p "Ship it and see what happens is not science." We ave to try to predict what will happen, and measure it. That is the way to seek out success.
%p You need to know what you are selling to make money!
%p If you are paying money for advertising, you better be able to monitor that, or it is a waste.
%p When you have a small customer base, that is an advantage! You can learn a lot from REAL people.
%p Balance is crap. We are who we are.
%p Every great entreprenuer in the last 100 years was an engineer. Remember it! You all rock!
%p Thank you to Eric for the great talk!

/ Ruby Heroes Awards Ceremony
%h3 #railsconf 2011 Notes
%p The Ruby Hero awards are all about people that have gone above and beyond in the Ruby community.
%ul
  %li Darcy Laycock: Worked on RVM and released RVM 1.0. Active in youthtree to get kids active and involved.
  %li Jonas Nicklas: Creator of BistroCar, Liability, Evergreen, CarrierWave, Capybara.
  %li Ryan Bigg: Huge commotor to documentation and helping others in the Ruby community.
  %li Loren Segal: Creator of YARD, and RubyDoc.info.
  %li Steve Klabnik: Maintainer of Shoes, Put out version 1.0 of HacketyHack!, Contributor to r stat.us, the timeless repository, contributor to RbMU.
  %li Michael Hartl: Author of RailsSpace, creator of Insoshi, author of Ruby on Rails Tutorial
%p One more thing: Screencasting.
%p Screencasting is embedded into the Ruby community. The Rails world was born with a screencast.
%p It feels good to contribute to the community by teaching through screencasting.
%p We need to be continuously be creating new materials for new Rails devotees.
%p That is what Rails for Zombies was all about. Interactive learning is awesome and powerful. Programming in the browser is a great idea.
%p How can we get the rest of the community out there screencasting? What keeps us from doing it?
%p What if there was a framework for creating a really good framework? So now there is one. Check it out at http://www.codeschool.com/
%h3 Validation and appreciation
%p We all need it. What can we do to right now? You can make yourself more accessible. We all have one thing in common here, we work on Rails, that is an easy ice breaker.
%p Rate your speaker's talks, that matters in the eyes of the people that speak.
%p Make sure to thank three people while you are here. Thank the people that have created the open source projects that have helped you. Thank three people. It makes a difference.
%p Do you have a story? Talk about it on Ruby5!
%p Thanks to all the Ruby Heroes!
