%h2 Primer on the Theory of Constraints
%i Bonnie Aumann, Algorithmics
%p Agile Philly July 2010 Meeting
%p Read "The Goal"
%ul
  %li Dependency and statistical variation can mess up the production of things.
  %li You do not get the average.
%h3 The Goal
%p Making money now and in the future (The Goal)
%p You make money with Sales * Production
%p A bottleneck is a special type of constraint: Demand >= Capacity
%p Balanced Operations + Dependency & Statistical variations = Floating bottlenecks.
%p Floating bottlenecks and unpredictable, therefore unmanageable.
%p The three variables of the system:
%ul
  %li Throughput = Money flowing in
  %li Inventory = Money inside the company (this is a bad thing)
  %li Operating Cost = Money flowing out
%p Throughput - Operating costs = Net profit!
%p To increase profit and productivity you should:
%ul
  %li Increase throughput
  %li Decrease assets
  %li Decrease operating expenses
%p In the traditional model, we first think about reducing throughput
%ul
  %li Reduce setup time
  %li less idle time for workers
  %li sub-contract or outsource the bottleneck
  %li add capacity to the constraint (throw people at it)
%p Theory of Constraints says:
%ul
  %li Inventory decreases profits
  %li Throughput increases profits
%p Inventory is negative profit (it is only useful when it is sold)
%p Cost Center Cancer: "My LOB is working fine, but the Company is suffering." This type of CYA can hurt the company's bottom line.
%p "If everyone spends a little bit more, we all make a lot more money."
%p When throughput is #1 you get systemic optimization. That makes for continuous improvements.
%p There are usually only a few constraints in any given system.
%p The point is to make money, not be the most efficient.
%p One big problem with software shops is that testing and QA are often given less time, which creates a bottleneck
%h4 The Flow Game (an example of how the goal works)
%p The goal is to solve math problems.
%ul
  %li
    Phase-based: Wanted to produce 5, got 0, 5 in progress
    %ul
      %li Really stressful, the BA bottlenecked the process
  %li
    Time-boxed: Wanted to produce 5, got 5, 2 in progress
    %ul
      %li The manager was happiest in this one
  %li
    Flow-based: Wanted to produce 6, got 6, 2 in progress
    %ul
      %li This was very chaotic. More error-prone
      %li The BA made more mistakes
%p Retrospectives are important to this process to analyze how to do the process better.
%p Drum - Buffer - Rope: This is the way Walmart works. They never keep any inventory, and fill the shelves in demand.
%p Questions to lead your discovery: http://maaw.info/TOCquestions.htm
%p Check out the KanBanDev Mailing List for a great source of discussion.