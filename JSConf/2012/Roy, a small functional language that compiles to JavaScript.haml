%h2
  %a{:href => "http://roy.brianmckenna.org/"}Roy,
  a small functional language that compiles to JavaScript
%i Brian McKenna (@puffnfresh)
%p Roy is a functional program that brings typing to JavaScript. I LOVE typing.
%p Roy is a completely immutable language.
%p It is like a mix of CoffeeScript and Haskell/OCaml
%p Roy won't allow you to add a string to a number, the types don't match.
%p It does static checking of duck typing. That means that unlike Java, you do not explicitly declare your types, but your types are inferred.
%p One of the things that suck about JS is callback hell. Roy solves this with monads.
%p That's right monads in JavaScript using jQuery's deferred objects and promises. You're welcome!
%p Roy's monads use the arrow syntax of Haskell's monads. (nice!)
%p That means you can have code that compiles to callback hell, but your Roy code looks nice and simple (read, synchronous)
%p Roy has module support, so you can have CommonJS-like code in Roy.
%p The next generation of Roy will have Source Maps to allow you to debug your code a lot easier.
%p The real goal of Roy is to make it even more immutable than Haskell (that is really immutable).
%p One of the neat things Roy will do is spit out errors when you have undefined functions.
%p This is really great stuff! Thanks for the talk!
