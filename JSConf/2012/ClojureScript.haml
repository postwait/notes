%h2 ClojureScript
%i David Nolen
%p We have ended up writing a lot of tools to fix problems with outher tools we use as front end engineers.
%p We can only manage 7+/-2 things in our head at the same time.
%p LISP is a beautiful language. All you need is 'eval' and 'apply' to bootstrap a LISP.
%pre
  %code (+ 1 1)
%p sometimes you want to model what a program can do:
%pre
  %code (quote (+ 1 1))
%p How is it that we come to insanely great ideas. I think it is by playing around.
%p Check out "The Rasoned Schemer"
%p Play is often really messy. And there is a beauty in that mess.
%p Play is often very pragmatic. You learn a lot by playing.
%b And now...ClojureScript
%p What ClojureScript gets you is a great little repl!
%p You can modify types you do not own by namespacing everything.
%p There should be no distance between your ideas and what you want to create
%p ClojureScript is immutable by default!
%p There is no such thing as a global namespace on ClojureScript.
%p There are macros. You can make the language better without committees (read TC39)
%p Logic programming is actually really powerful!
%p
  %a{:href => "https://github.com/clojure/core.logic"}core.logic
  is a way to do logic programming in clojure. It is one of the most amazing things ever created in clojure.
%p We really DO need to play more. Play in Clojure. Play in lots of other languages.
%p Community is not about specific languages and specific tools, it is about sharing ideas. THAT is what being a part of a community is all about!
