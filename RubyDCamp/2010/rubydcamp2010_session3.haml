%h2 Ruby DCamp 2010 Session 3: How to read and understand code better
%i Ashish
%p Knowing the difference between good and bad code is important. (anti-patterns are useful to be able to identify)
%p Ruby has many different options for object composition, so it can be hard to read many different types.
%p It isn't about knowing what is elegant or not, it is about understanding what any given code is doing.
%p irb is very useful for understanding what a piece of code does. With irb you and cut and paste code and see it run.
%p When trying to understand Rails code, start with the models and the routes.
%ul
  %li The routes tell you about the controller actions
  %li The model tells you about the underlining functionality of the app
%p Reading tests for a project can help you understand what supposes to do, in the words of the developer themselves.
%b If a function that you are trying to understand does NOT have a test, or is poorly commented, try writing a test for it yourself.
%ul
  %li Writing tests for functions is a great way to understand a function AND help improve the code base.
%p Check out Seven languages in seven weeks. It is an interesting dive that can help you understand all languages better.
%p Don't understand what a gem does? Open it up with: `bundler open gem-name`
%p JavaScript: The Good Parts - This is a great book to teach you about JavaScript
%p Design patterns are language smells (but they are useful for understanding other's code)
%p What is an anti-pattern? An anti-pattern is some poorly written code.
%p Some of the people here think that any comments are an anti-pattern. (I disagree)
%ul
  %li They believe that all code should be self-explanitory
  %li Write tests instead of comments, they verify what you mean to do.
  %li Comments are a symptom that you need to fix
%p Check out metric-fu, it is a good way to help detect code smells
%p As you get better with git, you will find that the history becomes more important to you.
%p If you want to understand the best, try to find a mentor. And your mentor is not always an expert. An expert is different than a teacher. Having your mentor co-located with you helps, but IRC can help, too.
%ul
  %li RailsBridge has a Rails mentor program that can help you out.
  %li There are a LOT of options, IF you want to pay for them (e.g., The Compleat Rubyist)
  %li A mentor is someone that will give you direction, not just instruction
%p The ruby world is interesting, since rubyists tend to stress software craftsmanship.
%p Ruby is now like Java was 15-20 years ago. The developers are excited and energized. As Ruby grows we might see it become an enterprise tool and the cutting edge groups move to other languages.
